#!/bin/bash

if [[ $# -lt 1 ]]; then
  echo "$0 <user-name>"
  exit 1
fi

cd $OPENVPN_TOOL_PATH/keys
sudo cp $OPENVPN_PATH/$1.tar.gz ./
sudo tar -xf $1.tar.gz
rm $1.ovpn
touch $1.ovpn

cat > $1.ovpn <<EOF
client
dev tun
proto udp
remote vpn-asia.blocks.services 1194
resolv-retry infinite
nobind
persist-key
persist-tun
ca ca.crt
cert $1.crt
key $1.key

# Verify server certificate by checking that the
# certicate has the correct key usage set.
# This is an important precaution to protect against
# a potential attack discussed here:
#  http://openvpn.net/howto.html#mitm
#
# To use this feature, you will need to generate
# your server certificates with the keyUsage set to
#   digitalSignature, keyEncipherment
# and the extendedKeyUsage to
#   serverAuth
# EasyRSA can do this for you.
remote-cert-tls server

# If a tls-auth key is used on the server
# then every client must also have the key.
;tls-auth ta.key 1
key-direction 1

# Select a cryptographic cipher.
# If the cipher option is used on the server
# then you must also specify it here.
cipher AES-128-CBC
auth SHA256

comp-lzo
verb 3
auth-user-pass
auth-nocache
tun-mtu 1400
mssfix 1400

#add your routes here
#route <<x.1.0.0 255.255.0.0>>
#route <<x.2.0.0 255.255.0.0>>
EOF

cat <(echo -e '\n<tls-auth>') \
    ta.key \
    <(echo -e '</tls-auth>') \
    >> $1.ovpn

rm -f $1.tar.gz
tar zcf $1.tar.gz ca.crt $1.crt $1.key $1.ovpn
#chmod 0600 $1.tar.gz

sudo mkdir -p $OPENVPN_PATH/
sudo cp $1.tar.gz $OPENVPN_PATH/
rm -f $1.*
